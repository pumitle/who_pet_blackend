const express = require('express');
const { conn,queryAsync } = require('../dbcon');
const mysql = require('mysql');
const jwt = require('jsonwebtoken'); 
const crypto = require('crypto');
const nodemailer = require('nodemailer');


const router = express.Router();



router.get("/",(req,res)=>{

    const sql = "select * from Users";
    conn.query(sql,(err,result)=>{
        if(err){
            res.json(err);
        }else{
            res.json(result);
        }
    });

});



//register User
router.post("/registerU" , (req,res)=> {
    const {email,name,img_user,password,phone,line,instagram,facebook} = req.body;

         // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Др╕бр╣Ир╣Гр╕лр╣Йр╕бр╕╡р╕Бр╕▓р╕гр╕Бр╕гр╕нр╕Бр╕Др╣Ир╕▓р╕зр╣Ир╕▓р╕Зр╕лр╕гр╕╖р╕нр╕Бр╕гр╕нр╕Бр╣Бр╕Хр╣Ир╕Кр╣Ир╕нр╕Зр╕зр╣Ир╕▓р╕З
    if (!name || !phone || !email || !password ||        
    name.trim() === ''  || phone.trim() === '' ||
    email.trim() === '' || password.trim() === '') {
    return res.status(400).json({ error: 'р╕Бр╕гр╕╕р╕Ур╕▓р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕лр╣Йр╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щр╣Бр╕ер╕░р╣Др╕бр╣Ир╣Ар╕Ыр╣Зр╕Щр╕Кр╣Ир╕нр╕Зр╕зр╣Ир╕▓р╕З' });
}
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
        return res.status(400).json({ error: 'Invalid email format' });
    }

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕нр╕╡р╣Ар╕бр╕ер╕лр╕гр╕╖р╕нр╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕гр╕ир╕▒р╕Юр╕Чр╣Мр╕бр╕╡р╕нр╕вр╕╣р╣Ир╣Бр╕ер╣Йр╕зр╣Гр╕Щр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕гр╕╖р╕нр╣Др╕бр╣И
    const checkQuery = `SELECT phone FROM Users WHERE email = ? or phone = ? `;

    conn.query(checkQuery,[email,phone],(err,result)=>{
        // р╕Цр╣Йр╕▓р╣Ар╕Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Чр╕╡р╣Ир╕бр╕╡р╕нр╕╡р╣Ар╕бр╕ер╕лр╕гр╕╖р╕нр╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕гр╕Лр╣Йр╕│р╕Бр╕▒р╕Щ
        if (result.length > 0) {
            return res.status(400).json({ error: 'р╕бр╕╡р╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Чр╕╡р╣Ир╣Гр╕Кр╣Й email р╕лр╕гр╕╖р╕нр╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕гр╕Щр╕╡р╣Йр╣Бр╕ер╣Йр╕з' });
          }
        
        const insertQuery = `INSERT INTO Users (email,name,img_user,password,phone,line,instagram,facebook,type) VALUES (?,?,?,?,?,?,?,?,?)`;
        conn.query(insertQuery ,[email,name,img_user,password,phone,line,instagram,facebook,'user'], (err,result)=> {
            if (err) {
                console.error('Error during registration:', err);
                return res.status(500).json({ error: 'Error during registration' });
            }
            return res.status(200).json({ success: true, user: result, message: 'Register successful' });
        });
    });

});


 //login 
 router.post("/login" , (req,res)=> {
    const {email,password} = req.body;

    if (!email|| !password) {
        return res.status(400).json({ error: "email and password are required" });
    }

    const sql = "SELECT * FROM Users WHERE email = ? AND password = ? ";
    conn.query(sql,[email,password], (err,result) => {
        if(err) {
            return res.status(500).json({ error: "Internal Server Error" });
        }

        if(result.length > 0) {
            const user = result[0];
            const userRes = {
                Uid: user.id_user,
                email: user.email,
                name: user.name,
                img_user: user.img_user,
                password: user.password,
                phone: user.phone,
                line: user.line,
                instagram: user.instagram,
                facebook: user.facebook,
                type: user.type
            };
            return res.json({ message: "Login successful", user: userRes });
        } else {
            return res.status(401).json({ error: "Invalid email or password" });
        }
    });

 });



 ///р╕ер╕╖р╕бр╕гр╕лр╕▒р╕к 

 const resetTokens = {}; // р╣Ар╕Бр╣Зр╕Ър╣Вр╕Чр╣Ар╕Др╣Зр╕Щр╣Бр╕ер╕░р╕зр╕▒р╕Щр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕

// р╣Ар╕кр╣Йр╕Щр╕Чр╕▓р╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕ер╕╖р╕бр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
router.post('/forgot-password', (req, res) => {
    const { email } = req.body;
    
    // р╕кр╕гр╣Йр╕▓р╕Зр╣Ар╕ер╕Вр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щ 6 р╕лр╕ер╕▒р╕Б
    const verificationCode = Math.floor(100000 + Math.random() * 900000); // р╕кр╕гр╣Йр╕▓р╕Зр╣Ар╕ер╕В 6 р╕лр╕ер╕▒р╕Б
    
    // р╣Ар╕Бр╣Зр╕Ър╣Ар╕ер╕Вр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щр╣Бр╕ер╕░р╕зр╕▒р╕Щр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╣Гр╕Щр╕лр╕Щр╣Ир╕зр╕вр╕Др╕зр╕▓р╕бр╕Ир╕│
    const expires = new Date(Date.now() + 60000); // р╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╣Гр╕Щ 1 р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З
    resetTokens[verificationCode] = { email, expires };
    
    // р╕кр╕гр╣Йр╕▓р╕Зр╕ер╕┤р╕Зр╕Бр╣Мр╕кр╕│р╕лр╕гр╕▒р╕Ър╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щ
    const resetLink = `app://reset-password?code=${verificationCode}`;

    // р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕е
    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: 'whopetsandlove@gmail.com',  // р╣Гр╕кр╣Ир╕нр╕╡р╣Ар╕бр╕ер╕Хр╕гр╕Зр╣Ж
        pass: 'woxm cqno eowo odwx'        // р╣Гр╕кр╣Ир╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Хр╕гр╕Зр╣Ж
      }
    });
  
    const mailOptions = {
      from: 'whopetsandlove@gmail.com',
      to: email,
      subject: 'р╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ',
      html: `
      <div style="display: flex; justify-content: flex-end; align-items: center; height: 100vh; font-family: Arial, sans-serif; text-align: center; background-color: #f4f4f9; padding-right: 20px;">
        <div>
          <h1 style="font-size: 44px; color: #333; align-items: center;" >р╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щ</h1>
          <p style="font-size: 36px; color:rgb(164, 6, 6); font-weight: bold;">${verificationCode}</p>
          <p style="font-size: 18px; color: #555;">р╕Бр╕гр╕╕р╕Ур╕▓р╣Гр╕Кр╣Йр╕гр╕лр╕▒р╕кр╕Щр╕╡р╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Вр╕нр╕Зр╕Др╕╕р╕У</p>
        </div>
      </div>`
    };
  
    // р╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕е
    transporter.sendMail(mailOptions, (err, info) => {
        if (err) {
          console.error('Error:', err);  // р╣Бр╕кр╕Фр╕Зр╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф
          return res.status(500).json({ message: 'р╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕ер╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И' });
        }
        res.json({ message: 'р╕кр╣Ир╕Зр╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щр╣Бр╕ер╣Йр╕з' });
    });
});


// // ЁЯУМ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щ
// router.post('/reset-password', (req, res) => {
//     const { verificationCode, email, newPassword } = req.body;
  
//     // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╣Вр╕Др╣Йр╕Фр╕Чр╕╡р╣Ир╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Бр╕гр╕нр╕Бр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
//     if (!resetTokens[verificationCode]) {
//       return res.status(400).json({ message: 'р╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╕лр╕гр╕╖р╕нр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕' });
//     }
  
//     const tokenData = resetTokens[verificationCode];
  
//     // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╣Вр╕Др╣Йр╕Фр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╕лр╕гр╕╖р╕нр╣Др╕бр╣И
//     if (new Date() > tokenData.expires) {
//       delete resetTokens[verificationCode];  // р╕ер╕Ър╣Вр╕Др╣Йр╕Фр╕Чр╕╡р╣Ир╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕р╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕лр╕Щр╣Ир╕зр╕вр╕Др╕зр╕▓р╕бр╕Ир╕│
//       return res.status(400).json({ message: 'р╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕' });
//     }
  
//     // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕нр╕╡р╣Ар╕бр╕ер╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕Чр╕╡р╣Ир╣Ар╕Бр╣Зр╕Ър╣Гр╕Щр╕лр╕Щр╣Ир╕зр╕вр╕Др╕зр╕▓р╕бр╕Ир╕│
//     if (tokenData.email !== email) {
//       return res.status(400).json({ message: 'р╕нр╕╡р╣Ар╕бр╕ер╣Др╕бр╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щ' });
//     }
  
//     // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
//     const updateQuery = 'UPDATE Users SET password = ? WHERE email = ?';
//     conn.query(updateQuery, [newPassword, email], (err, updateResult) => {
//       if (err) return res.status(500).json({ message: 'р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕Фр╣Й' });
      
//       // р╕ер╕Ър╣Вр╕Др╣Йр╕Фр╕Ир╕▓р╕Бр╕лр╕Щр╣Ир╕зр╕вр╕Др╕зр╕▓р╕бр╕Ир╕│р╕лр╕ер╕▒р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ
//       delete resetTokens[verificationCode];
  
//       res.json({ message: 'р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И' });
//     });
//   });
  
  // ЁЯУМ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щ
router.post('/verify-code', (req, res) => {
  const { verificationCode, email } = req.body;

  // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕бр╕╡р╕гр╕лр╕▒р╕кр╕нр╕вр╕╣р╣Ир╣Гр╕Щр╕лр╕Щр╣Ир╕зр╕вр╕Др╕зр╕▓р╕бр╕Ир╕│р╕лр╕гр╕╖р╕нр╣Др╕бр╣И
  if (!resetTokens[verificationCode]) {
      return res.status(400).json({ message: 'р╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╕лр╕гр╕╖р╕нр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕' });
  }

  const tokenData = resetTokens[verificationCode];

  // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╕▒р╕Щр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕
  if (new Date() > tokenData.expires) {
      delete resetTokens[verificationCode];  // р╕ер╕Ър╣Вр╕Др╣Йр╕Фр╕Чр╕╡р╣Ир╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕
      return res.status(400).json({ message: 'р╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щр╕лр╕бр╕Фр╕нр╕▓р╕вр╕╕' });
  }

  // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕нр╕╡р╣Ар╕бр╕ер╕Хр╕гр╕Зр╕Бр╕▒р╕Щр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
  if (tokenData.email !== email) {
      return res.status(400).json({ message: 'р╕нр╕╡р╣Ар╕бр╕ер╣Др╕бр╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щ' });
  }

  // р╕гр╕лр╕▒р╕кр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З тЬЕ
  res.json({ message: 'р╕гр╕лр╕▒р╕кр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Хр╕▒р╕зр╕Хр╕Щр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З' });
});

// ЁЯУМ р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
router.post('/reset-password', (req, res) => {
  const { email, newPassword } = req.body;

  // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕нр╕╡р╣Ар╕бр╕ер╕бр╕╡р╕нр╕вр╕╣р╣Ир╣Гр╕Щр╕гр╕░р╕Ър╕Ър╕лр╕гр╕╖р╕нр╣Др╕бр╣И
  const updateQuery = 'UPDATE Users SET password = ? WHERE email = ?';
  conn.query(updateQuery, [newPassword, email], (err, updateResult) => {
      if (err) return res.status(500).json({ message: 'р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕Фр╣Й' });

      res.json({ message: 'р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И' });
  });
});



// р╕кр╣Ир╕Зр╕нр╕нр╕Б router
module.exports = { router };